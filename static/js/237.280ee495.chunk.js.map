{"version":3,"file":"static/js/237.280ee495.chunk.js","mappings":"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","sources":["components/Search/Filter.jsx","components/Books/Book.jsx","components/Books/Books.jsx","pages/BooksPage/BookPage.jsx","store/actions/selected-action.js","store/actions/shelf-action.js","store/selectors/books-selector.js","store/selectors/shelf-selector.js"],"sourcesContent":["import Select from 'react-select';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectBooks } from '../../store/selectors/books-selector';\nimport { toast } from 'react-toastify';\n\nconst Filter = ({ booksByFilter, setBooksByFilter }) => {\n  const [selectedOption, setSelectedOption] = useState(40);\n  const [searchTitle, setSearchTitle] = useState('');\n\n  const books = useSelector(selectBooks);\n\n  const options = [\n    { value: 10, label: '10 books per page' },\n    { value: 15, label: '15 books per page' },\n    { value: 20, label: '20 books per page' },\n    { value: 40, label: '40 books per page' },\n  ];\n  const customStyles = {\n    container: provided => ({\n      ...provided,\n      border: 'solid 2px #99876f',\n      borderRadius: 15,\n\n      background: '#ebeddf',\n    }),\n    control: provided => ({\n      ...provided,\n      marginTop: '1rem',\n      marginBottom: '1rem',\n      border: 'none',\n      boxShadow: 'none',\n      // none of react-select's styles are passed to <Control />\n    }),\n    indicatorSeparator: provided => ({\n      ...provided,\n      marginTop: 0,\n      marginBottom: 0,\n    }),\n  };\n\n  const handleFilter = e => {\n    let filteredBooks = [...books];\n\n    if (selectedOption === 40) {\n      filteredBooks.length = selectedOption;\n      if (searchTitle) {\n        filteredBooks = books.filter(el =>\n          el.volumeInfo.title.toLowerCase().includes(searchTitle),\n        );\n      }\n    } else if (selectedOption.value) {\n      filteredBooks.length = selectedOption.value;\n      if (searchTitle) {\n        filteredBooks = books.filter(el =>\n          el.volumeInfo.title.toLowerCase().includes(searchTitle),\n        );\n      }\n    }\n\n    setBooksByFilter(filteredBooks);\n    toast(\n      `Filtered ${filteredBooks.length} ${\n        filteredBooks.length > 1 ? 'books' : 'book'\n      }`,\n    );\n  };\n\n  return (\n    <div className=\"select-box row\">\n      <div className=\"filter-box col  \">\n        <Select\n          styles={customStyles}\n          className=\"react-select-container  \"\n          placeholder=\"40 books by default\"\n          defaultValue={selectedOption}\n          onChange={setSelectedOption}\n          options={options}\n          theme={theme => ({\n            ...theme,\n            borderRadius: '10px',\n\n            colors: {\n              ...theme.colors,\n              primary25: '#99876f',\n              primary: '#827717 ',\n              neutral0: '#ebeddf',\n            },\n          })}\n        />\n      </div>\n\n      <div className=\" search-box col s8\">\n        <div className=\"input-field col s12\">\n          <input\n            type=\"search\"\n            id=\"search-field\"\n            placeholder=\"Search in titles...\"\n            value={searchTitle}\n            onChange={e => setSearchTitle(e.target.value)}\n          />\n          <button\n            className=\"btn lime lighten-1\"\n            type=\"submit\"\n            onClick={() => handleFilter()}\n            style={{\n              position: 'absolute',\n              top: '9px',\n              right: '13px',\n            }}\n          >\n            Set Filters\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setShelf } from '../../store/actions/shelf-action';\nimport { toast } from 'react-toastify';\n\nimport { setSelected } from '../../store/actions/selected-action';\nimport { selectBooks } from '../../store/selectors/books-selector';\nimport { selectShelf } from '../../store/selectors/shelf-selector';\n\nconst Book = ({ book }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const books = useSelector(selectBooks);\n  const shelf = useSelector(selectShelf);\n\n  const shelfIds = shelf.map(el => el.id);\n\n  const handleAddToShelfClick = book => {\n    if (shelfIds.includes(book.id)) {\n      toast.error('Already in the BookShelf!');\n      return;\n    }\n    dispatch(setShelf(book));\n    toast('Book added to shelf!');\n  };\n  const id = book.id;\n  const handleSelect = (books, id) => {\n    dispatch(setSelected(books, id));\n    navigate(`/book/${book.id}`);\n  };\n\n  return (\n    <div className=\"card \">\n      <div className=\"card-image\">\n        {book.volumeInfo.imageLinks ? (\n          <img\n            className=\"activator\"\n            src={book.volumeInfo.imageLinks.thumbnail}\n            alt=\"img\"\n            onClick={() => handleSelect(books, id)}\n          />\n        ) : (\n          <img\n            className=\"activator\"\n            src={`https://via.placeholder.com/300x450?text=ooops`}\n            // src={`https://i.picsum.photos/id/1025/300/450`} need to checkout\n            alt=\"img\"\n            onClick={() => handleSelect(books, id)}\n          />\n        )}\n\n        <button\n          className=\"btn-floating halfway-fab waves-effect waves-light teal lighten-1\"\n          onClick={() => handleAddToShelfClick(book)}\n        >\n          <i className=\"material-icons lime lighten-1 \">add</i>\n        </button>\n      </div>\n      <div className=\"card-content\">\n        <span className=\"card-title\">{book.volumeInfo.title}</span>\n        <p>\n          {book.volumeInfo.description\n            ? book.volumeInfo.description.slice(0, 100)\n            : 'ooopsy'}\n          ...\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { CSVLink } from 'react-csv';\nimport { selectBooks } from '../../store/selectors/books-selector';\nimport Filter from '../Search/Filter';\nimport Spinner from '../Spinner/Spinner';\n\nimport Book from './Book';\nimport { toast } from 'react-toastify';\n\nconst Books = () => {\n  const [csvData, setCsvData] = useState([]);\n  const [booksByFilter, setBooksByFilter] = useState([]);\n\n  const books = useSelector(selectBooks);\n\n  const navigate = useNavigate();\n  const data = books.map(book => book.volumeInfo);\n  const filteredData = booksByFilter.map(book => book.volumeInfo);\n\n  const headers = [\n    { label: 'Name', key: 'title' },\n    { label: 'Author', key: 'authors' },\n    { label: 'Publisher', key: 'publisher' },\n    { label: 'Published Date', key: 'publishedDate' },\n    { label: 'Categories', key: 'categories' },\n    { label: 'Page Count', key: 'pageCount' },\n    { label: 'Description', key: 'description' },\n  ];\n  const csvReport = {\n    filename: 'Report.csv',\n    headers: headers,\n    data: csvData,\n  };\n\n  useEffect(() => {\n    if (books.length > 0) {\n      toast(`I showed ${books.length} books`);\n    }\n  }, [books]);\n\n  useEffect(() => {\n    if (booksByFilter.length === 0) {\n      setCsvData(data);\n    } else {\n      setCsvData(filteredData);\n    }\n  }, [booksByFilter, books]);\n\n  return (\n    <>\n      <div className=\"container content\" data-testid=\"Books\">\n        {booksByFilter.length > 0 ? (\n          <>\n            {!booksByFilter.length ? (\n              <Spinner />\n            ) : (\n              <>\n                <div className=\"csv-box\">\n                  <button\n                    className=\"btn lime lighten-1 backBtn\"\n                    onClick={() => navigate(-1)}\n                  >\n                    Go Back\n                  </button>\n                  <CSVLink\n                    {...csvReport}\n                    separator=\";\"\n                    className=\"btn lime lighten-1\"\n                  >\n                    Export to CSV\n                  </CSVLink>\n                </div>\n                <Filter\n                  booksByFilter={booksByFilter}\n                  setBooksByFilter={setBooksByFilter}\n                />\n                <div className=\"books\">\n                  {booksByFilter.map(book => (\n                    <Book key={book.id} book={book} />\n                  ))}\n                </div>\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            {!books.length ? (\n              <Spinner />\n            ) : (\n              <>\n                <div className=\"csv-box\">\n                  <button\n                    className=\"btn lime lighten-1 backBtn\"\n                    onClick={() => navigate(-1)}\n                  >\n                    Go Back\n                  </button>\n                  <CSVLink\n                    {...csvReport}\n                    separator=\";\"\n                    className=\"btn lime lighten-1\"\n                  >\n                    Export to CSV\n                  </CSVLink>\n                </div>\n                <Filter\n                  booksByFilter={booksByFilter}\n                  setBooksByFilter={setBooksByFilter}\n                />\n                <div className=\"books\">\n                  {books.map(book => (\n                    <Book key={book.id} book={book} />\n                  ))}\n                </div>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\nexport default Books;\n","import Books from '../../components/Books/Books';\n\nconst BooksView = () => {\n  return <Books />;\n};\nexport default BooksView;\n","import { SET_SELECTED } from '../constants/selected-constants';\n\nexport const setSelected = (books, id) => ({\n  type: SET_SELECTED,\n  payload: {\n    books,\n    id,\n  },\n});\n","import { SET_SHELF, REMOVE_FROM_SHELF } from '../constants/shelf-constants';\n\nexport const setShelf = book => ({\n  type: SET_SHELF,\n  payload: {\n    book,\n  },\n});\nexport const removeFromShelf = shelfItem => ({\n  type: REMOVE_FROM_SHELF,\n  payload: {\n    shelfItem,\n  },\n});\n","export const selectBooks = store => store.bookReducer.books;\n","export const selectShelf = store => store.shelfReducer.shelf;\n"],"names":["booksByFilter","setBooksByFilter","useState","selectedOption","setSelectedOption","searchTitle","setSearchTitle","books","useSelector","selectBooks","customStyles","container","provided","border","borderRadius","background","control","marginTop","marginBottom","boxShadow","indicatorSeparator","className","styles","placeholder","defaultValue","onChange","options","value","label","theme","colors","primary25","primary","neutral0","type","id","e","target","onClick","filteredBooks","length","filter","el","volumeInfo","title","toLowerCase","includes","toast","handleFilter","style","position","top","right","book","navigate","useNavigate","dispatch","useDispatch","shelfIds","selectShelf","map","handleSelect","setSelected","imageLinks","src","thumbnail","alt","setShelf","handleAddToShelfClick","description","slice","csvData","setCsvData","data","filteredData","csvReport","filename","headers","key","useEffect","CSVLink","separator","Spinner","SET_SELECTED","payload","SET_SHELF","removeFromShelf","shelfItem","REMOVE_FROM_SHELF","store","bookReducer","shelfReducer","shelf"],"sourceRoot":""}